- job: deployToDyn
  displayName: Deploy to Dynamic Env
  dependsOn:
    - packageAndPublish
    - prepareEnvironment
    - deployToDev
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
  variables:
    - group: dev-core-secrets
    - name: semVer
      value: $[ dependencies.packageAndPublish.outputs['setVersionStep.semVer'] ]
    - name: namespace
      value: $[ dependencies.prepareEnvironment.outputs['DeployVars.Namespace'] ]
    - name: sqlPackageArgs
      value: "/p:DatabaseEdition=Standard /p:DatabaseServiceObjective=S0"

  steps:
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: 'az aks get-credentials -n gpitfutures-development-aks -g gpitfutures-development-rg-aks'
    name: kubectlContext
    displayName: Get Kubernetes Context

  - task: HelmInstaller@1
    displayName: 'install helm'
    inputs:
      helmVersionToInstall: 'latest'

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
          acr="gpitfuturesdevacr"

          acrUsername=$(az acr credential show --name $acr --query username -o tsv)
          acrPassword=$(az acr credential show --name $acr --query passwords[0].value -o tsv)
          acrLoginSvr=$(az acr list --query "[?name=='$acr'].loginServer" -o tsv)

          helm repo add $acr https://$acrLoginSvr/helm/v1/repo --username $acrUsername --password $acrPassword
          helm repo add stable https://charts.helm.sh/stable/
          helm repo update
    name: addRepos
    displayName: Add gpitfuturesdevacr & stable repo

  - bash: |
      cd selenium-grid 
      ./launch-selenium-grid.sh --add "$(namespace).buyingcatalogue.digital.nhs.uk"
    name: setupSeleniumGrid
    displayName: Setup Selenium Grid

  - bash: |   
      ping -c 30 127.0.0.1
    name: delayNextStep
    displayName: Delay Next Step (30s)

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'NHSAPP-BuyingCatalogue (Non-Prod)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
          sqlDbAdminUser=$(az sql server list --query "[?name=='gpitfutures-development-sql-pri'].administratorLogin" -o tsv)
          sqlDbAdminPass=$(az keyvault secret show --vault-name gpit-development-kv --name "gpitdevelopmentsqladminpassword" --query value -o tsv)
          saConnectionString=$(az storage account show-connection-string --name gpitfuturesdevelopment --resource-group gpitfutures-development-rg-sa --query connectionString -o tsv)
          appgwPip=$(az network public-ip show --name gpitfutures-development-pip --resource-group gpitfutures-development-rg-appgw --query ipAddress -o tsv)
          redisHost=$(az redis show --resource-group gpitfutures-dev-core-rg-redis --name gpitfutures-dev-core-redis --query hostName -o tsv)
          redisPass=$(az redis list-keys --resource-group gpitfutures-dev-core-rg-redis --name gpitfutures-dev-core-redis --query primaryKey -o tsv)

          ./launch-or-update-azure.sh \
          -c remote \
          -n $(namespace) \
          -d gpitfutures-development-sql-pri.database.windows.net \
          -u $sqlDbAdminUser \
          -p $sqlDbAdminPass \
          --base-path "$(namespace).dev.buyingcatalogue.digital.nhs.uk" \
          -w true \
          -v $(semVer) \
          -s "/p:DatabaseEdition=Standard /p:DatabaseServiceObjective=S0" \
          -a "$saConnectionString" \
          -i "$appgwPip" \
          -r $redisHost \
          -q $redisPass \
          --cookie-secret=$(srt-cookiesecret) \
          --client-secret=$(srt-clientsecret) \
          --db-user-pass=$(srt-sqldevdbpass) \
          -f "azure-dev.yaml"  
    name: deploySystem
    displayName: Deploy System